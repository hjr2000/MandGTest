// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace MandG_Test.FeatureFiles
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("M and G Test")]
    public partial class MAndGTestFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "test.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "M and G Test", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Null, empty string or string other than 7 characters long")]
        [NUnit.Framework.TestCaseAttribute("Null", "False", "False", "Input string was not 7-characters long.", null)]
        [NUnit.Framework.TestCaseAttribute("12", "False", "False", "Input string was not 7-characters long.", null)]
        [NUnit.Framework.TestCaseAttribute("123456789", "False", "False", "Input string was not 7-characters long.", null)]
        public virtual void NullEmptyStringOrStringOtherThan7CharactersLong(string inputStringTestValue, string isValidSedol, string isUserDefined, string validationDetails, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Null, empty string or string other than 7 characters long", null, exampleTags);
#line 3
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
testRunner.Given("I am on the SEDOL validation test page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 5
testRunner.When(string.Format("I set the IsValidSedol checkbox to \'{0}\'", isValidSedol), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 6
testRunner.And(string.Format("I set the IsUserDefined checkbox to \'{0}\'", isUserDefined), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 7
testRunner.And(string.Format("submit the test SEDOL \'{0}\'", inputStringTestValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
testRunner.Then(string.Format("the validation details shown are \'{0}\'", validationDetails), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Invalid non user define SEDOL")]
        [NUnit.Framework.TestCaseAttribute("1234567", "False", "False", "Checksum digit does not agree with the first 6 characters.", null)]
        public virtual void InvalidNonUserDefineSEDOL(string inputStringTestValue, string isValidSedol, string isUserDefined, string validationDetails, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Invalid non user define SEDOL", null, exampleTags);
#line 15
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 16
testRunner.Given("I am on the SEDOL validation test page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 17
testRunner.When(string.Format("I set the IsValidSedol checkbox to \'{0}\'", isValidSedol), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 18
testRunner.And(string.Format("I set the IsUserDefined checkbox to \'{0}\'", isUserDefined), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
testRunner.And(string.Format("submit the test SEDOL \'{0}\'", inputStringTestValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
testRunner.Then(string.Format("the validation details shown are \'{0}\'", validationDetails), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Valid non user defined SEDOL")]
        [NUnit.Framework.TestCaseAttribute("0709954", "True", "False", "Null", null)]
        [NUnit.Framework.TestCaseAttribute("B0YBKJ7", "True", "False", "Null", null)]
        public virtual void ValidNonUserDefinedSEDOL(string inputStringTestValue, string isValidSedol, string isUserDefined, string validationDetails, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Valid non user defined SEDOL", null, exampleTags);
#line 25
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 26
testRunner.Given("I am on the SEDOL validation test page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 27
testRunner.When(string.Format("I set the IsValidSedol checkbox to \'{0}\'", isValidSedol), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
testRunner.And(string.Format("I set the IsUserDefined checkbox to \'{0}\'", isUserDefined), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
testRunner.And(string.Format("submit the test SEDOL \'{0}\'", inputStringTestValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
testRunner.Then(string.Format("the validation details shown are \'{0}\'", validationDetails), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Invalid user defined SEDOL")]
        [NUnit.Framework.TestCaseAttribute("9123451", "False", "True", "Checksum digit does not agree with the first 6 characters.", null)]
        [NUnit.Framework.TestCaseAttribute("9ABCDE8", "False", "True", "Checksum digit does not agree with the first 6 characters.", null)]
        public virtual void InvalidUserDefinedSEDOL(string inputStringTestValue, string isValidSedol, string isUserDefined, string validationDetails, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Invalid user defined SEDOL", null, exampleTags);
#line 36
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 37
testRunner.Given("I am on the SEDOL validation test page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 38
testRunner.When(string.Format("I set the IsValidSedol checkbox to \'{0}\'", isValidSedol), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 39
testRunner.And(string.Format("I set the IsUserDefined checkbox to \'{0}\'", isUserDefined), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
testRunner.And(string.Format("submit the test SEDOL \'{0}\'", inputStringTestValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
testRunner.Then(string.Format("the validation details shown are \'{0}\'", validationDetails), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Valid user defined SEDOL")]
        [NUnit.Framework.TestCaseAttribute("9123458", "True", "True", "Null", null)]
        [NUnit.Framework.TestCaseAttribute("9ABCDE1", "True", "True", "Null", null)]
        public virtual void ValidUserDefinedSEDOL(string inputStringTestValue, string isValidSedol, string isUserDefined, string validationDetails, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Valid user defined SEDOL", null, exampleTags);
#line 47
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 48
testRunner.Given("I am on the SEDOL validation test page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 49
testRunner.When(string.Format("I set the IsValidSedol checkbox to \'{0}\'", isValidSedol), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 50
testRunner.And(string.Format("I set the IsUserDefined checkbox to \'{0}\'", isUserDefined), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
testRunner.And(string.Format("submit the test SEDOL \'{0}\'", inputStringTestValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
testRunner.Then(string.Format("the validation details shown are \'{0}\'", validationDetails), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
